// For Mixins

// ADDS A BROWSER PREFIX TO THE PROPERTY
@mixin browser_prefix($property, $value) {
	-webkit-#{$property}: #{$value};
	 -khtml-#{$property}: #{$value};
	   -moz-#{$property}: #{$value};
	    -ms-#{$property}: #{$value};
	     -o-#{$property}: #{$value};
	        #{$property}: #{$value};
}

// TRANSITION
@mixin transition($properties...) {

	@if length($properties) >= 1 {
		@include browser_prefix('transition', $properties);
	}

	@else {
		@include browser_prefix('transition',  "all 0.2s ease-in-out 0s");
	}
}

// BOX SHADOW
@mixin box-shadow($shadow, $color: rgba(0,0,0,.4), $inset: "") {
	@if ($inset != "") {
		@include browser_prefix('box-shadow', $inset $shadow $color);
	} @else {
		@include browser_prefix('box-shadow', $shadow $color);
	}
}

// LONG SHADOW
@mixin long-shadow($scolor, $length) {
	$list: ();
	@for $i from 1 through $length {
		$list: append($list, $scolor $i+px $i+px, comma);
	}
	text-shadow: $list;
}

// Font mixins
@mixin font-smoothing {
    -webkit-font-smoothing: antialiased;
    font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin font-default ($weight: 400, $style: normal) {
    font-family: $font-default;
    font-weight: $weight;
    font-style: $style;
    @include font-smoothing;
}

// Responsive queries
@mixin respond ($media) {
    @media screen and #{$media} {
        @content;
    }
}

// Image for retina
@mixin image-2x ($image, $width, $height) {
    @media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
        background-image: url($image);
        @include background-size($width $height);
    }
}

// Clearfix
@mixin clearfix {
    *zoom: 1;
    &::after {
        content: '';
        display: table;
        line-height: 0;
        clear: both;
    }
}

// Calc function with prefixes
@mixin calc ($property, $expression) {
    #{$property}: -moz-calc(#{$expression});
    #{$property}: -webkit-calc(#{$expression});
    #{$property}: calc(#{$expression});
}

// Animation
@mixin animation ($name, $duration: 1000ms, $iterations: infinite, $timing-function: ease, $delay: 0ms, $fill-mode: both) {
    -webkit-animation: $name $duration $iterations $timing-function $delay $fill-mode;
    -moz-animation: $name $duration $iterations $timing-function $delay $fill-mode;
    -o-animation: $name $duration $iterations $timing-function $delay $fill-mode;
    animation: $name $duration $iterations $timing-function $delay $fill-mode;
}

// keyframes
@mixin keyframes($name) {
	@-webkit-keyframes $name { @content; }
	@-moz-keyframes $name { @content; }
	@-ms-keyframes $name { @content; }
	@keyframes $name { @content; }
}

// Placeholder color
@mixin placeholder ($color, $opacity: 1) {
    &::-webkit-input-placeholder {
        color: $color;
        opacity: $opacity;
    }
    &:-moz-placeholder {
        color: $color;
        opacity: $opacity;
    }
    &::-moz-placeholder {
        color: $color;
        opacity: $opacity;
    }
    &:-ms-input-placeholder {
        color: $color;
        opacity: $opacity;
    }
}
